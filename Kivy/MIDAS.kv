#:kivy 1.0.9
#:import F kivy.factory.Factory
#:import S MIDAS_Settings



<AlignedTextInput@TextInput>
    font_name: S.font_name


<MidasButton@Button>
    font_name: S.font_name
    font_size: 14


<HeightPopup@Popup>:
    title: 'Height'
    auto_dismiss: False
    size_hint: 0.5, 0.2
    note_HeightSlider: note_HeightSlider
    BoxLayout:
        Slider:
            id: note_HeightSlider
            range: 12,127
            orientation: 'horizontal'
            value: S.noteHeight
            value_track: True
            step: 1
        Label:
            id: slider_Label
            text: str(note_HeightSlider.value)
        Button:
            id: slider_Done
            text: 'Done'
            on_press: root.height_popup_done()



<MainUI>:
    id: main_UI
    size_hint: 1,1
    rows: 3
    columns: 2

    MidasButton:
        id: midas_Button
        size_hint: 0.2,0.1
        text: "MIDAS"
        font_size: 14
        background_normal: ''
        background_down: S.button_down
        background_color: 0, 0.7725490196078431, 1, 1
        on_press: root.refresh()

    MusicodeArea:
        id: musicode_Area
        size_hint: 0.8,0.1

    MidiArtButtons:
        id: midiart_Buttons
        size_hint: 0.2,0.9

    BoxLayout:
        id: box_Split
        orientation: 'vertical'
        Splitter:
            id: drawarea_Splitter
            sizable_from: 'bottom'
            #add_widget: image_View
            #add_widget(layout_or_widget_instance)
            min_size: 45
            max_size: 775
            strip_size: '5pt'
            size_hint: 1, 0.23

            #pos: tuple([0, 0])
            #border = ListProperty([1,1,1,1])

            MusicodeDrawArea:
                id: musicodedraw_Area
                #size_hint: 1, .0005

        ImageDrawArea:
            id: imagedraw_Area
            size: 8,8
            #size_hint: 0.65, 0.65

            #Button:
            #    id: midas_Coffee
            #    text: 'Sounds Good!'
            #    on_press: print("ouch! More gently please")
            #    on_release: print("ahhh")
            #    on_state:
            #        print("my current state is {}".format(self.state))
        HelpArea:
            id: help_Area
            #orientation: 'horizontal'
            size_hint: 1., 0.25 #.22
            background_color: 0.25607843137254902, 0.7031372549019608, 0.867843137254902, 1

<MusicodeArea>
    txt_Input: txt_Input
    musicode_Choice: musicode_Choice
    orientation: 'horizontal'
    Label:
        id: textt2trans_Label
        text: 'Text to Translate -->'
        halign: 'right'
    TextInput:
        id: txt_Input
        text: ""
        font_size: 11
    Spinner:
        id: musicode_Choice
        text: '  Select \n\nA Musicode'
        font_name: S.font_name
        font_size: 10
        values: [m for m in root.musicodes_sh]
        on_text: root.update_musicode()
    MidasButton:
        id: translate_Btn
        size_hint: 0.7623952095808383, 1
        text: 'Translate'
        font_size: 14
        on_press: root.translate_txt()
        background_normal: ''
        background_down: S.button_down
        background_color: 0, 0.7725490196078431, 1, 1


<MidiArtButtons>
    orientation: 'vertical'
    granularity_Choice: granularity_Choice
    #txt_Key: txt_Key

    MidasButton:
        id: load_Image
        text: "Load Image"
        font_size: 11
        on_release: root.show_load()

    BoxLayout:
        orientation: 'horizontal'
        padding_vertical: 0.05, 0.05
        Button:
            id: 'note_HeightBtn'
            size_hint: 0.7, 1
            text: 'Height'
            on_release: root.heightPopup.open()
        Label:
            id: note_Height
            size_hint: 0.3, 1
            text: str(root.note_Height)

    BoxLayout:
        orientation: 'horizontal'
        padding_vertical: 0.05, 0.05
        Spinner:
            id: granularity_Choice
            #text: "Note Duration"
            orientation: 'horizontal'
            text: "Note Durations"      #'\'Note Durations\''
            values: [m for m in root.granularities]
            on_text: root.updateGranularity()
    BoxLayout:
        orientation: 'horizontal'
        padding_vertical: 0.05, 0.05
        Label:
            size_hint: 0.7, 1
            text: 'Connect\nNotes?'
            font_size: 14
        BoxLayout:
            orientation: 'vertical'
            size_hint: 0.3, 1
            ToggleButton:
                id: tb_Y
                text: 'Yes'
                state: 'down'
                group: 'connectNotes'
                on_release: root.updateConnectNotes()
            ToggleButton:
                id: tb_N
                text: 'No'
                group: 'connectNotes'
                on_release: root.updateConnectNotes()
    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: 0.5
        Label:
            size_hint_x: .7
            text: 'Key'
            font_size: 14
            valign: 'middle'
        Spinner
            id: txt_Key
            text: "Key"
            font_name: "times"
            font_size: 10
            size_hint_x: 0.3
            values: S.key_list
            on_text: root.updateKey()
        #AlignedTextInput:
            #id: txt_Key
            #font_name: "times"
            #font_size: 14
            #size_hint_x: 0.3
            #multiline: False
            #valign: 'middle'

    Spinner:
        id: colors_Choice
        size_hint_y: 0.4
        text: 'Select Color'
        font_size: 15 
        #sync_height: True
        #font_name: S.font_name
        values: [clrs for clrs in S.clr_dict_list]
        on_text: root.updateColor()
        on_press: root.showColorsHelpText()
        on_release: root.restoreHelpTextFontSize()
        #background_normal: ''
        #background_down: S.button_down
        #background_color: 0.19607843137254902, 0.6431372549019608, 0.807843137254902, 1


    Spinner:
        id: midiart_Choice
        text: 'Midiart'
        font_name: S.font_name
        font_size: 14
        values: ["Edges", "Color", "Monochrome"]
        #on_release:
        on_text: root.transform_image(S.image)
        background_normal: ''
        background_down: S.button_down
        background_color: 0, 0.7725490196078431, 1, 1


<MusicodeDrawArea>
    AsyncImage:
        id: musicode_View
        #size: root.width, root.height
        #size_hint: .65,.65
        #nocache: True
        source: root.musicode_source   #musicode_source
        allow_stretch: True
        keep_ratio: False



<ImageDrawArea>
    imageview: image_View.__self__   #Has to do with weak reference stuff. Since this widget is 'removed' by user use,
                                     #and we want to reinstantiate it, we need this call here to preserve 'image_View'**
    AsyncImage:
        #source: '<random_name>.jpg'
        id: image_View               #** found here.
        #size: root.width, root.height
        size_hint: 1,1
        #nocache: True
        source: root.image_source
        allow_stretch: True
        keep_ratio: True #False

<HelpArea>
    Label:
        id: helptext_Label
        #size_hint: 1, 1
        text: 'To begin, cycle the MIDAS button 5 times.'

        #text_size: (574, 51)
        #size_hint_y: None
        #text_size: self.width, None
        #height: self.texture_size[1]

        font_size: 7
        halign: 'right'
        color: 0.19607843137254902, 0.6431372549019608, 0.807843137254902, 1

    Spinner:

        id: help_Menu
        size_hint: 0.2534, 1.
        text: 'Help'
        font_size: 14
        sync_height: True
        font_name: S.font_name
        values: ["Help", "The Magic\n Hammer", "Output\nFolder"]   ##"Full Credits", "FAQS","User\nManual"
        on_text: root.help_menu_select()
        background_color: 0, 0.7725490196078431, 1, 1
        background_normal: '' ##S.button_default
        background_down: S.button_down

        #on_press: root.showColorsHelpText()
        #on_release: root.restoreHelpTextFontSize()


        #background_normal: ''
        #background_down: S.button_down
        #background_color: 0.19607843137254902, 0.6431372549019608, 0.807843137254902, 1


    #Button:
    #    id: output_Button
    #    size_hint: 0.2534, 1
    #    text: "Output Folder"
    #    halign: 'right'
    #    background_color: 0, 0.7725490196078431, 1, 1
    #    background_normal: '' ##S.button_default
    #    background_down: S.button_down
    #    on_press: root.open_output_folder()





    #TextInput:
    #    id: txt_Input
    #    text: ""
    #    font_size: 10




<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel/Last Image"
                on_release: root.cancel()

            Button:
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)


<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: txtFileLoad
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)


<OutputDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserIconView:
            id: filechooser_View
            path: S.filepath

        BoxLayout:
            size_hint_y: None
            height: 30


#<ExampleFileManager@BoxLayout>
#   orientation: 'vertical'
#   spacing: dp(5)

#   MDToolbar:
#       id: toolbar
#       title: app.title
#       left_action_items: [['menu', lambda x: None]]
#       elevation: 10
#       md_bg_color: app.theme_cls.primary_color


#   FloatLayout:

#       MDRoundFlatIconButton:
#           text: "Open manager"
#           icon: "folder"
#           pos_hint: {'center_x': .5, 'center_y': .6}
#           on_release: app.file_manager_open()